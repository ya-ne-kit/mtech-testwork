{
	"info": {
		"_postman_id": "21a19614-5961-4a08-bb3b-f0d3515eda7e",
		"name": "Automobile Configurator",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "31013481"
	},
	"item": [
		{
			"name": "Get all wheels",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Проверка количества элементов\", function () { \r",
							"    var jsonData = pm.response.json(); \r",
							"    pm.expect(jsonData.length).to.eql(5); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/wheels"
			},
			"response": []
		},
		{
			"name": "Get all bodies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Проверка количества элементов\", function () { \r",
							"    var jsonData = pm.response.json(); \r",
							"    pm.expect(jsonData.length).to.eql(4); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/bodies"
			},
			"response": []
		},
		{
			"name": "Post car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Проверка поля id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Проверка поля bodyId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.body.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Проверка поля wheelId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.wheel.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Проверка поля wheelCount\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.wheelCount).to.eql(2);\r",
							"});\r",
							"pm.test(\"Проверка поля name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Крутая тачка\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Крутая тачка\", \"bodyId\": 1, \"wheelId\": 1, \"wheelCount\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/create-car"
			},
			"response": []
		},
		{
			"name": "Post car 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Проверка поля id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(2);\r",
							"});\r",
							"pm.test(\"Проверка поля bodyId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.body.id).to.eql(2);\r",
							"});\r",
							"pm.test(\"Проверка поля wheelId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.wheel.id).to.eql(2);\r",
							"});\r",
							"pm.test(\"Проверка поля wheelCount\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.wheelCount).to.eql(4);\r",
							"});\r",
							"pm.test(\"Проверка поля name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Другая крутая тачка\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Другая крутая тачка\", \"bodyId\": 2, \"wheelId\": 2, \"wheelCount\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/create-car"
			},
			"response": []
		},
		{
			"name": "Post car 400 (validation wheels count)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Еще более крутая тачка\", \"bodyId\": 2, \"wheelId\": 2, \"wheelCount\": 0\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/create-car"
			},
			"response": []
		},
		{
			"name": "Post car 400 (validation wheels quantity less than exists)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Еще более крутая тачка\", \"bodyId\": 2, \"wheelId\": 4, \"wheelCount\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/create-car"
			},
			"response": []
		},
		{
			"name": "Post car 400 (validation body not found)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Еще более крутая тачка\", \"bodyId\": 10, \"wheelId\": 1, \"wheelCount\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:8080/create-car"
			},
			"response": []
		},
		{
			"name": "Get car by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Проверка поля id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Проверка поля bodyId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.body.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Проверка поля wheelId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.wheel.id).to.eql(1);\r",
							"});\r",
							"pm.test(\"Проверка поля wheelCount\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.wheelCount).to.eql(2);\r",
							"});\r",
							"pm.test(\"Проверка поля name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Крутая тачка\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car?id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get car by id 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car?id=10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car"
					],
					"query": [
						{
							"key": "id",
							"value": "10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all cars (check pagination)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка поля 'ID'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].id).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/cars?from=1&size=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"cars"
					],
					"query": [
						{
							"key": "from",
							"value": "1"
						},
						{
							"key": "size",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all cars (pagination by default)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Проверка статуса\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Проверка количества элементов\", function () { \r",
							"    var jsonData = pm.response.json(); \r",
							"    pm.expect(jsonData.length).to.eql(2); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://localhost:8080/cars"
			},
			"response": []
		}
	]
}